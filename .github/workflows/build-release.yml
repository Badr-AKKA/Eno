name: Upload Release Asset

on:
  push:
    tags: 
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Eno name
      id: get_name
      env:
        ENO_NAME: "eno-core" 
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Get maven version
      id: get_eno_version
      run:  mvn help:evaluate -Dexpression=project.version -q -DforceStdout --file pom.xml
    - name: Build with Maven
      run: mvn install -DskipTests=true -Dmaven.javadoc.skip=true -Djar.finalName="${{steps.get_name.env.ENO_NAME}}" -B -V --file pom.xml
    - name: Test with Maven
      run: mvn test -B --file pom.xml
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: target/${{steps.get_name.env.ENO_NAME}}.jar
        asset_name: ${{steps.get_name.env.ENO_NAME}}.jar
        asset_content_type: application/java-archive
