<project basedir="." name="EnoDDI">
    
    <!-- ********************************************** ddiPreprocessing ************************************************ -->
    <!-- This target will call 3 sub targets : dereferencing / cleaning / titling -->
    <!-- It expects an 'input-file' param for the beginning file uri of the pipeline.  -->
    <target name="ddiPreprocessing">
        <!-- Dereferencing : the input DDI files (ccs, qb...) -->
        <!-- Creates multiple files with a -dereferenced suffix in the temp folder-->
        <antcall target="dereferencing">
            <param name="input-file" value="${preprocessing-input-file}"/>
        </antcall>
        <!-- For each created file (one by model), we clean. -->
        <!-- Creating a -cleaned suffixed file -->
        <foreach target="cleaning" param="file" inheritall="true">
            <path>
                <fileset dir="${temp.home}/${Properties.SurveyName}/${Properties.InFormat}" excludes="*-dereferenced.tmp, null.tmp"/>
            </path>
        </foreach>
        <!-- Then adding titles to the created file below -->
        <!-- Creating a -final suffixed file -->
        <foreach target="titling" param="file" inheritall="true">
            <path>
                <fileset dir="${temp.home}/${Properties.SurveyName}/${Properties.InFormat}" includes="*-cleaned.tmp"/>
            </path>
        </foreach>
    </target>
    
    <!-- Dereferencing -->
    <target name="dereferencing">
        
        <!-- Creates a dereferenced DDI for each model with the already dereferenced files and adding some variables from the VariableScheme to the upcoming result -->
        <xslt in="${input-file}"
            out="${temp.home}/${Properties.SurveyName}/${Properties.InFormat}/null.tmp" style="${xslt.home}/util/ddi/dereferencing.xsl"
            classpath="${saxon.jar}" force="true">
            <param name="output-folder" expression="${temp-folder}/${Properties.SurveyName}/${Properties.InFormat}"/>
        </xslt>
        
    </target>
    
    <!-- Cleaning -->
    <!-- Creates a -cleaned suffixed file after applying the cleaning.xsl stylesheet to the input file -->
    <target name="cleaning" description="Cleaning DDI">
        <basename file="${file}" property="file-name" suffix=".tmp"/>
        <xslt in="${temp.home}/${Properties.SurveyName}/${Properties.InFormat}/${file-name}.tmp" out="${temp.home}/${Properties.SurveyName}/${Properties.InFormat}/${file-name}-cleaned.tmp"
            style="${xslt.home}/util/ddi/cleaning.xsl" classpath="${saxon.jar}" force="true"/>
    </target>
    
    <!-- Titling -->
    <!-- Creates a -final suffixed file after applying the titling.xsl stylesheet to the input file -->
    <target name="titling" description="Adding titles">
        <basename file="${file}" property="file-name" suffix=".tmp"/>
        <propertyregex property="output-name" input="${file-name}" regexp="-cleaned" replace=""
            global="true"/>
        <xslt in="${temp.home}/${Properties.SurveyName}/${Properties.InFormat}/${file-name}.tmp" out="${temp.home}/${Properties.SurveyName}/${Properties.InFormat}/${output-name}-final.tmp"
            style="${xslt.home}/util/ddi/titling.xsl" classpath="${saxon.jar}" force="true">
            <file name="parameters-file" basedir="${questionnaires.home}/${Properties.SurveyName}/parameters.xml"/>
        </xslt>
    </target>
    
    <!-- ddiPostProcessing : Only copying the basic-form.tmp to the target folder and renaming as form -->
    <target name="ddiPostProcessing">
        <property name="out-extension" value="xml"/>
        <copy file="${postprocessing-input-file}" tofile="${root-folder}/target/${Properties.SurveyName}/${form-name}/form/form.${out-extension}"/>
    </target>
    
</project>
